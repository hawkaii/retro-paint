#!/bin/bash

# Test script for collaborative features with persistence
echo "Testing collaborative paint platform with persistence..."

# Start backend in background
echo "Starting Go backend..."
cd backend
go run main.go &
BACKEND_PID=$!

# Wait for backend to start
sleep 2

# Test health endpoint
echo "Testing health endpoint..."
curl -s http://localhost:8080/health
echo ""

# Test room creation
echo "Testing room creation..."
curl -s -X POST http://localhost:8080/api/rooms \
  -H "Content-Type: application/json" \
  -d '{"name":"Test Room","maxUsers":5,"isPrivate":false}' | jq .
echo ""

# Test room listing
echo "Testing room listing..."
curl -s http://localhost:8080/api/rooms | jq .
echo ""

echo "âœ… Canvas Persistence & Collaboration Platform Ready!"
echo "Backend PID: $BACKEND_PID"
echo "To stop backend: kill $BACKEND_PID"
echo ""
echo "ðŸŽ¨ NEW FEATURES IMPLEMENTED:"
echo "âœ… Canvas persistence on page refresh (localStorage)"
echo "âœ… Stable user identities with persistent usernames"
echo "âœ… Default shared room (no more isolated connections)"
echo "âœ… Smart canvas restoration (server vs local state)"
echo "âœ… Exponential backoff WebSocket reconnection"
echo "âœ… Room cleanup for empty rooms (5min delay)"
echo "âœ… Real-time collaborative drawing"
echo "âœ… User presence indicators with cursor tracking"
echo "âœ… Room management system"
echo ""
echo "ðŸ§ª TO TEST PERSISTENCE:"
echo "1. Start frontend: npm run dev"
echo "2. Draw something on the canvas"
echo "3. Refresh the page - your canvas should restore!"
echo "4. Open multiple tabs - all share the default room"
echo "5. Create custom rooms and invite others"
echo ""
echo "ðŸ’¾ PERSISTENCE FEATURES:"
echo "â€¢ Canvas automatically saves to localStorage"
echo "â€¢ User identity persists across sessions"
echo "â€¢ Room preferences remembered"
echo "â€¢ Smart conflict resolution (server vs local)"
echo "â€¢ 24-hour localStorage cache expiry"